
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций


&НаКлиенте
Процедура БаллыКСписаниюПриИзменении(Элемент)
	//TODO: Вставить содержимое обработчика
	РассчитатьСуммуДокумента()
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПозицииПродажи

&НаКлиенте
Процедура СуммаИтогоПриИзменении(Элемент)
	//TODO: Вставить содержимое обработчика
	БаллыКСписанию = ПозицииПродажи.Итог("Сумма") - СуммаИтого;
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиПриИзменении(Элемент)
	//TODO: Вставить содержимое обработчика
	РассчитатьСуммуДокумента()
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	//TODO: Вставить содержимое обработчика
	СтандартнаяОбработка = Ложь;
	
	Значение = ПараметрыПеретаскивания.Значение;
	
	Если ТипЗнч(ПараметрыПеретаскивания) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
		
	ДобавитьУникальнуюПозициюПродажи(Значение.Номенклатура,Значение.Цена,Значение.Количество,Значение.Цена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиНоменклатураПриИзменении(Элемент)
	//TODO: Вставить содержимое обработчика
	ДанныеСтроки = Элементы.ПозицииПродажи.ТекущиеДанные;
	ДанныеСтроки.Цена = ЦенаНоменклатуры(ДанныеСтроки.Номенклатура);
	РассчитатьСуммуСтроки(ДанныеСтроки)
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиКоличествоПриИзменении(Элемент)
	//TODO: Вставить содержимое обработчика
	ДанныеСтроки = Элементы.ПозицииПродажи.ТекущиеДанные;
	РассчитатьСуммуСтроки(ДанныеСтроки)
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиЦенаПриИзменении(Элемент)
	//TODO: Вставить содержимое обработчика
	ДанныеСтроки = Элементы.ПозицииПродажи.ТекущиеДанные;
	РассчитатьСуммуСтроки(ДанныеСтроки)
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокНоменклатуры

&НаКлиенте
Процедура СписокНоменклатурыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	//TODO: Вставить содержимое обработчика
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ДанныеСтроки.ЭтоГруппа Тогда
		Выполнение = Ложь;
		Возврат;
	КонецЕсли;
	
	Значение = Новый Структура;
	Значение.Вставить("Номенклатура",ДанныеСтроки.Номенклатура);
	Значение.Вставить("Цена",ДанныеСтроки.Цена);
	Значение.Вставить("Количество",1);
	Значение.Вставить("Сумма",ДанныеСтроки.Цена);
	
	ПараметрыПеретаскивания.Значение = Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//TODO: Вставить содержимое обработчика
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьУникальнуюПозициюПродажи(ВыбраннаяСтрока,ДанныеСтроки.Цена,1,ДанныеСтроки.Цена);
			
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

// Код процедур и функций


&НаКлиенте
Процедура ЗаписатьПродажи(Команда)
	
	НовыйДокумент = ЗаписатьПродажиНаСервере();
	
	ОповеститьОбИзменении(НовыйДокумент);
	
	ПоказатьОповещениеПользователя("Создан документ ", 
	ПолучитьНавигационнуюСсылку(НовыйДокумент),Строка(НовыйДокумент));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций
&НаКлиенте
Процедура ДобавитьУникальнуюПозициюПродажи(Номенклатура,Цена,Количество,Сумма) 
	Фильтр = Новый Структура;
	Фильтр.Вставить("Номенклатура",Номенклатура);
	
	НайденныеСтроки = ПозицииПродажи.НайтиСтроки(Фильтр);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Строка = ПозицииПродажи.Добавить();
	Строка.Номенклатура = Номенклатура;
	Строка.Цена = Цена;
	Строка.Количество = Количество;
	Строка.Сумма = Сумма;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЦенаНоменклатуры(Знач Номенклатура)
	
	Возврат РегистрыСведений.ЦеныНоменклатуры.ЦенаНоменклатуры(Номенклатура,ТекущаяДатаСеанса());
	
КонецФункции

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	СуммаИтого = ПозицииПродажи.Итог("Сумма") - БаллыКСписанию;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ДанныеСтроки)
	Если (ДанныеСтроки.Цена = 0 ИЛИ ДанныеСтроки.Цена = Неопределено) 
	ИЛИ (ДанныеСтроки.Количество = 0 ИЛИ ДанныеСтроки.Количество = Неопределено) Тогда
		ДанныеСтроки.Сумма = 0;
	КонецЕсли;
	ДанныеСтроки.Сумма = ДанныеСтроки.Цена * ДанныеСтроки.Количество;
КонецПроцедуры

&НаСервере
Функция ЗаписатьПродажиНаСервере()
	//TODO: Вставить содержимое обработчика
	ДокПродажаБилета = Документы.ПродажаБилета.СоздатьДокумент();
	ДокПродажаБилета.Дата = ТекущаяДатаСеанса();
	
	ДокПродажаБилета.Заполнить(Неопределено);
	
	ДокПродажаБилета.Клиент = Клиент;
	ДокПродажаБилета.ПозицииПродажи.Загрузить(ПозицииПродажи.Выгрузить());
	ДокПродажаБилета.БаллыКСписанию = БаллыКСписанию;
	ДокПродажаБилета.СуммаДокумента = СуммаИтого;
	
	Если Не ДокПродажаБилета.ПроверитьЗаполнение() Тогда
		//Возврат;
		ВызватьИсключение "Не удалось записать продажу...";
	КонецЕсли;
	
	ДокПродажаБилета.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат ДокПродажаБилета.Ссылка;
	
КонецФункции

#КонецОбласти
