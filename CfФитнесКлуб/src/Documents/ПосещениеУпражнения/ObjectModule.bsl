
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций
Процедура ОбработкаПроведения(Отказ,Режим)
	Движения.АктивныеПосещения.Записывать = Истина;
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	"ВЫБРАТЬ
	|	АктивныеПосещенияОстатки.КоличествоПосещенийОстаток,
	|	АктивныеПосещенияОстатки.ВидУпражнения
	|ИЗ
	|	РегистрНакопления.АктивныеПосещения.Остатки(, Основание = &Основание) КАК АктивныеПосещенияОстатки";
	Запрос.УстановитьПараметр("Основание", Билет);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОсталосьПосещений = 0;
	ВидУпражненияАбонемент = НЕОПРЕДЕЛЕНО;
	
	Если Выборка.Следующий() Тогда
		ОсталосьПосещений = Выборка.КоличествоПосещенийОстаток;
		ВидУпражненияАбонемент = Выборка.ВидУпражнения;
	КонецЕсли;	
	Если ОсталосьПосещений < 1 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В билете не осталось посещений!";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Билет";
		Сообщение.Сообщить();
	КонецЕсли;
	
	ВидУпражненияДокумента = ВидУпражнения(Упражнение);
	Если ЗначениеЗаполнено(ВидУпражненияАбонемент) И  ВидУпражненияДокумента <> ВидУпражненияАбонемент Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Билет не подходит для посещения этого упражнения!";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Билет";
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;	
	
	Движения.АктивныеПосещения.Записывать = Истина;
	Движение = Движения.АктивныеПосещения.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Основание = Билет;
	Движение.ВидУпражнения = ВидУпражненияАбонемент;
	Движение.КоличествоПосещений = 1;

	// регистр ДоходыТренера
	Движения.ДоходыТренера.Записывать = Истина;
	Движение = Движения.ДоходыТренера.Добавить();
	Движение.Период = Дата;
	Движение.Упражнение = Упражнение;
	Движение.Тренер = Тренер;
	ПроцентТренеруУпражнениеПосещение = ПроцентТренеруУпражнение(Упражнение,Дата);
	СуммаДокументаБилет = Билет.СуммаДокумента;
	КоличествоПосещенийВБилете = 1/Билет.УдалитьНоменклатура.КоличествоПосещений;
	Движение.Сумма = (СуммаДокументаБилет/100)*ПроцентТренеруУпражнениеПосещение*КоличествоПосещенийВБилете;
	Движения.Записать();
	
	// новая методика
	//// регистр АктивныеПосещения
	//Движения.АктивныеПосещения.Записывать = Истина;
	//Движение = Движения.АктивныеПосещения.Добавить();
	//Движение.Период = Дата;
	//Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//Движение.Основание = Билет;
	//Движение.ВидУпражнения = ВидУпражнения(Упражнение);
	//Движение.КоличествоПосещений = 1;

	//Движения.Записать();
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 	"ВЫБРАТЬ
	//|	АктивныеПосещенияОстатки.Основание
	//|ИЗ
	//|	РегистрНакопления.АктивныеПосещения.Остатки(, Основание = &Основание) КАК АктивныеПосещенияОстатки
	//|ГДЕ
	//|	АктивныеПосещенияОстатки.КоличествоПосещенийОстаток < 0";
	//Запрос.УстановитьПараметр("Основание", Билет);
	
	//Если НЕ Запрос.Выполнить().Пустой() Тогда
	//	Отказ = Истина;
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "По одному билету можно проходить только один раз!";
	//	Сообщение.УстановитьДанные(ЭтотОбъект);
	//	Сообщение.Поле = "Билет";
	//	Сообщение.Сообщить();
	//КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

Функция ВидУпражнения(Упражнение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Упражнения.ВидУпражнения
	|ИЗ
	|	Справочник.Упражнения КАК Упражнения
	|ГДЕ
	|	Упражнения.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Упражнение);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Результат = Выборка.ВидУпражнения;
	
	Возврат Результат;
КонецФункции


Функция ПроцентТренеруУпражнение(Знач Упражнение, Знач Период)
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ПроцентТренеруПоУпражнениюСрезПоследних.ПроцентТренеру
	|ИЗ
	|	РегистрСведений.ПроцентТренеруПоУпражнению.СрезПоследних(&Период, Упражнение = &Упражнение) КАК
	|		ПроцентТренеруПоУпражнениюСрезПоследних";
	
	Запрос.УстановитьПараметр("Упражнение", Упражнение);
	Запрос.УстановитьПараметр("Период", Период);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
			Результат = РезультатЗапроса.ПроцентТренеру;
		Иначе
			Результат = 0 ;
	КонецЕсли;	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
